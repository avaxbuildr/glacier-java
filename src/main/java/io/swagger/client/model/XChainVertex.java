/*
 * Glacier API
 * The Glacier API provides web3 application developers with multi-chain        data related to Avalanche's primary network, Avalanche subnets, and        Ethereum. With Glacier, you can easily build products that leverage        real-time and historical transaction and transfer history, native and        token balances, and various types of token metadata. The API is in Beta        and may be subject to change.        </br></br>        If you have feedback or feature requests for the API, please submit them        <a href=\"https://portal.productboard.com/dndv9ahlkdfye4opdm8ksafi/tabs/4-glacier-api\">here</a>. Bug reports can be submitted        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeJQrcp7QoNiqozMDKrVJGX5wpU827d3cVTgF8qa7t_J1Pb-g/viewform\">here</a>, and any potential security        issues can be reported <a href=\"https://hackenproof.com/avalanche\">here</a>.
 *
 * OpenAPI spec version: Beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * XChainVertex
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-05-05T19:37:42.090584799-03:00[America/Sao_Paulo]")
public class XChainVertex {
  @SerializedName("vertexHash")
  private String vertexHash = null;

  @SerializedName("parentHashes")
  private List<String> parentHashes = new ArrayList<String>();

  @SerializedName("vertexHeight")
  private BigDecimal vertexHeight = null;

  @SerializedName("vertexIndex")
  private BigDecimal vertexIndex = null;

  @SerializedName("vertexTimestamp")
  private BigDecimal vertexTimestamp = null;

  @SerializedName("txCount")
  private BigDecimal txCount = null;

  @SerializedName("transactions")
  private List<String> transactions = new ArrayList<String>();

  @SerializedName("vertexSizeBytes")
  private BigDecimal vertexSizeBytes = null;

  public XChainVertex vertexHash(String vertexHash) {
    this.vertexHash = vertexHash;
    return this;
  }

   /**
   * Get vertexHash
   * @return vertexHash
  **/
  @Schema(required = true, description = "")
  public String getVertexHash() {
    return vertexHash;
  }

  public void setVertexHash(String vertexHash) {
    this.vertexHash = vertexHash;
  }

  public XChainVertex parentHashes(List<String> parentHashes) {
    this.parentHashes = parentHashes;
    return this;
  }

  public XChainVertex addParentHashesItem(String parentHashesItem) {
    this.parentHashes.add(parentHashesItem);
    return this;
  }

   /**
   * Get parentHashes
   * @return parentHashes
  **/
  @Schema(required = true, description = "")
  public List<String> getParentHashes() {
    return parentHashes;
  }

  public void setParentHashes(List<String> parentHashes) {
    this.parentHashes = parentHashes;
  }

  public XChainVertex vertexHeight(BigDecimal vertexHeight) {
    this.vertexHeight = vertexHeight;
    return this;
  }

   /**
   * Get vertexHeight
   * @return vertexHeight
  **/
  @Schema(required = true, description = "")
  public BigDecimal getVertexHeight() {
    return vertexHeight;
  }

  public void setVertexHeight(BigDecimal vertexHeight) {
    this.vertexHeight = vertexHeight;
  }

  public XChainVertex vertexIndex(BigDecimal vertexIndex) {
    this.vertexIndex = vertexIndex;
    return this;
  }

   /**
   * Get vertexIndex
   * @return vertexIndex
  **/
  @Schema(required = true, description = "")
  public BigDecimal getVertexIndex() {
    return vertexIndex;
  }

  public void setVertexIndex(BigDecimal vertexIndex) {
    this.vertexIndex = vertexIndex;
  }

  public XChainVertex vertexTimestamp(BigDecimal vertexTimestamp) {
    this.vertexTimestamp = vertexTimestamp;
    return this;
  }

   /**
   * Get vertexTimestamp
   * @return vertexTimestamp
  **/
  @Schema(required = true, description = "")
  public BigDecimal getVertexTimestamp() {
    return vertexTimestamp;
  }

  public void setVertexTimestamp(BigDecimal vertexTimestamp) {
    this.vertexTimestamp = vertexTimestamp;
  }

  public XChainVertex txCount(BigDecimal txCount) {
    this.txCount = txCount;
    return this;
  }

   /**
   * Get txCount
   * @return txCount
  **/
  @Schema(required = true, description = "")
  public BigDecimal getTxCount() {
    return txCount;
  }

  public void setTxCount(BigDecimal txCount) {
    this.txCount = txCount;
  }

  public XChainVertex transactions(List<String> transactions) {
    this.transactions = transactions;
    return this;
  }

  public XChainVertex addTransactionsItem(String transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @Schema(required = true, description = "")
  public List<String> getTransactions() {
    return transactions;
  }

  public void setTransactions(List<String> transactions) {
    this.transactions = transactions;
  }

  public XChainVertex vertexSizeBytes(BigDecimal vertexSizeBytes) {
    this.vertexSizeBytes = vertexSizeBytes;
    return this;
  }

   /**
   * Get vertexSizeBytes
   * @return vertexSizeBytes
  **/
  @Schema(required = true, description = "")
  public BigDecimal getVertexSizeBytes() {
    return vertexSizeBytes;
  }

  public void setVertexSizeBytes(BigDecimal vertexSizeBytes) {
    this.vertexSizeBytes = vertexSizeBytes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XChainVertex xchainVertex = (XChainVertex) o;
    return Objects.equals(this.vertexHash, xchainVertex.vertexHash) &&
        Objects.equals(this.parentHashes, xchainVertex.parentHashes) &&
        Objects.equals(this.vertexHeight, xchainVertex.vertexHeight) &&
        Objects.equals(this.vertexIndex, xchainVertex.vertexIndex) &&
        Objects.equals(this.vertexTimestamp, xchainVertex.vertexTimestamp) &&
        Objects.equals(this.txCount, xchainVertex.txCount) &&
        Objects.equals(this.transactions, xchainVertex.transactions) &&
        Objects.equals(this.vertexSizeBytes, xchainVertex.vertexSizeBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vertexHash, parentHashes, vertexHeight, vertexIndex, vertexTimestamp, txCount, transactions, vertexSizeBytes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XChainVertex {\n");
    
    sb.append("    vertexHash: ").append(toIndentedString(vertexHash)).append("\n");
    sb.append("    parentHashes: ").append(toIndentedString(parentHashes)).append("\n");
    sb.append("    vertexHeight: ").append(toIndentedString(vertexHeight)).append("\n");
    sb.append("    vertexIndex: ").append(toIndentedString(vertexIndex)).append("\n");
    sb.append("    vertexTimestamp: ").append(toIndentedString(vertexTimestamp)).append("\n");
    sb.append("    txCount: ").append(toIndentedString(txCount)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    vertexSizeBytes: ").append(toIndentedString(vertexSizeBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
